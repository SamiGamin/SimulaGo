name: Update Version JSON on Tag


on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write


jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Le decimos que haga checkout de la rama 'master'.
          # Si tu rama principal se llama 'main', cambia 'master' por 'main'.
          ref: master

      - name: Read version info from gradle file
        id: read_version
        run: |
          VERSION_NAME=$(grep "versionName =" app/build.gradle.kts | head -1 | awk -F '"' '{print $2}')
          VERSION_CODE=$(grep "versionCode =" app/build.gradle.kts | head -1 | awk -F '=' '{print $2}' | tr -d ' ')
          echo "Version Name found: $VERSION_NAME"
          echo "Version Code found: $VERSION_CODE"
          
          # 2. SINTAXIS ACTUALIZADA PARA GUARDAR VARIABLES (elimina los warnings)
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Update update_config.json
        run: |
          pip install jq
          
          LATEST_VERSION_CODE=${{ steps.read_version.outputs.version_code }}
          LATEST_VERSION_NAME=${{ steps.read_version.outputs.version_name }}
          
          jq --argjson code "$LATEST_VERSION_CODE" --arg name "$LATEST_VERSION_NAME" \
          '.latestVersionCode = $code | .latestVersionName = $name' \
          update_config.json > tmp.json && mv tmp.json update_config.json
          
          echo "JSON file updated:"
          cat update_config.json

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add update_config.json
          git diff --staged --quiet || git commit -m "Automated: Update version to ${{ steps.read_version.outputs.version_name }}"
          git push
